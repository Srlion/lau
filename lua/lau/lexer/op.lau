let enum = lau.include_file("lau/enum.lau");
let OP, Op = enum(
	nil,
	s => "Op(" .. s .. ")"
);

// Assignment
Op("Assign", () => "'='");
Op("AddAssign", () => "'+='");
Op("SubAssign", () => "'-='");
Op("DivAssign", () => "'/='");
Op("MulAssign", () => "'*='");
Op("ModAssign", () => "'%='");
Op("ExpAssign", () => "'^='");
Op("ConAssign", () => "'..='");

// Arithmetic
Op("Add", () => "'+'");
Op("Sub", () => "'-'");
Op("Div", () => "'/'");
Op("Mul", () => "'*'");
Op("Mod", () => "'%'");
Op("Exp", () => "'^'");

// Comparison
Op("Eq", () => "'=='");
Op("Ne", () => "'!='");
Op("Gt", () => "'>'");
Op("Lt", () => "'<'");
Op("GtEq", () => "'>='");
Op("LtEq", () => "'<='");

// Logical
Op("LAnd", () => "'&&'");
Op("LOr", () => "'||'");
Op("Not", () => "'!'");

// Misc
Op("Ellipsis", () => "'...'");
Op("Concat", () => "'..'");
Op("Cond", () => "'?'");
Op("Dot", () => "'.'");
Op("Interp", () => "'$'");
Op("Len", () => "'#'");

return OP;